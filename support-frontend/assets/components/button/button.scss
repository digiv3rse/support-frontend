@import '~stylesheets/gu-sass/gu-sass';

.component-button {
  @include gu-fontset-body-sans;
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  font-weight: bold;
  height: $gu-cta-height;
  min-height: $gu-cta-height;
  padding: 0 ($gu-cta-height / 2);
  border: none;
  border-radius: $gu-cta-height / 2;
  box-sizing: border-box;
  background: transparent;
  cursor: pointer;
  transition: $gu-transition;
  justify-content: space-between;
  position: relative;
  &:hover, &:focus {
    outline: 0;
  }

  &[disabled], &[data-disabled] {
    background-color: gu-colour(neutral-100);
    opacity: .5;
    pointer-events: none;
  }
}

.component-button--non-interactive {
  pointer-events: none;
}

.component-button--primary {
  background-color: gu-colour(highlight-main);
  color: gu-colour(neutral-7);
  &:hover, &:focus {
    background-color: gu-colour(highlight-dark);
  }
}

.component-button--secondary {
  color: gu-colour(neutral-100);
  background-color: gu-colour( neutral-20);

  &:hover, &:focus {
    background-color: gu-colour(neutral-7);
  }
}

.component-button--green {
  color: gu-colour(neutral-100);
  background-color: gu-colour(green-main);

  &:hover, &:focus {
    background-color: gu-colour(green-dark);
  }
}

.component-button--greenHollow {
  color: gu-colour(green-main);
  border: 1px solid gu-colour(neutral-86);
  &:hover, &:focus {
    background: gu-colour(neutral-97);
  }
}

.component-button--greyHollow {
  color: gu-colour(neutral-7);
  border: 1px solid gu-colour(neutral-86);
  &:hover, &:focus {
    background: gu-colour(neutral-97);
  }
}

.component-button__content,
.component-button svg {
  flex: 0 0 auto;
  display: block;
}

.component-button svg {
  fill: currentColor;
  position: relative;
  width: $gu-cta-height / 2;
  height: auto;
}

.component-button--hasicon-left {
  flex-direction: row-reverse;

  svg {
    margin: 0 ($gu-cta-height / 4) 0 (-$gu-cta-height / 8);
  }
}

.component-button--hasicon-right {
  svg {
    margin: 0 (-$gu-cta-height / 8) 0 ($gu-cta-height / 4);
  }
}

/* icon-specific animations & transitions */
.component-button {
  .svg-arrow-right-straight {
    transition: $gu-transition transform;
    will-change: transform;
  }
  &:hover .svg-arrow-right-straight, &:focus .svg-arrow-right-straight {
    transform: translateX(20%);
  }
}
