// This contains the Guardian font combinations as currently used on
// support-frontend (https://github.com/guardian/support-frontend).
//
// It specifies the standard Guardian fonts and their fallbacks.
//
// It also provides a helper mixin for retrieving font information.

// ----- Font Families ----- //

$gu-titlepiece: 'GT Guardian Titlepiece', Georgia, serif !default;
$gu-headline: 'Guardian Headline', Georgia, serif !default;
$gu-text-egyptian-web: 'Guardian Text Egyptian Web', Georgia, serif !default;
$gu-text-sans-web: 'Guardian Text Sans Web', 'Helvetica Neue', Helvetica, Arial, 'Lucida Grande', sans-serif !default;


// ----- Font Properties ----- //

$gu-fonts: (
	textEgyptian: (
		family: $gu-text-egyptian-web,
		sizes: (
			17: 24px,
		)
	),
	headline: (
		family: $gu-headline,
		sizes: (
			16: 18px,
			18: 20px,
			20: 24px,
			22: 26px,
			24: 28px,
			32: 35px,
			42: 45px,
			50: 54px,
		)
	),
	textSans: (
		family: $gu-text-sans-web,
		sizes: (
			14: 18px,
			16: 22px,
			18: 24px,
		)
	)
);


// ----- Mixins ----- //

// Used to get font/lh pairs.
//
// Usage:
//
// gu-typeface(textEgyptian, 17);
// gu-typeface(textSans, 16)
// gu-typeface(textSans, 18, $size-only: true)
//
@mixin gu-typeface($name, $size, $size-only: false) {
	$font-data: map-get($gu-fonts, $name);
	font-size: $size + 0px;
	line-height: map-get(map-get($font-data, sizes), $size);
	@if $size-only == false {
		font-family: map-get($font-data, family);
	}
}


// ----- Font sets ----- //

// Use these to get uniform responsive type across pages


// ----- Nav ----- //
@mixin gu-fontset-nav-desktop($size-only: false) {
	@include gu-typeface(headline, 20, $size-only);
	@if $size-only == false {
		font-weight: 900;
	}
}
@mixin gu-fontset-nav-mobile($size-only: false) {
	@include gu-typeface(headline, 24, $size-only);
	@if $size-only == false {
		font-weight: 900;
	}
}


// ----- Headings ----- //
@mixin gu-fontset-heading-sans($size-only: false) {
	@include gu-typeface(textSans, 18, $size-only);
	@if $size-only == false {
		font-weight: 700;
	}
}
@mixin gu-fontset-heading-large($size-only: false) {
	@include gu-typeface(headline, 32, $size-only);
  @include mq($from: tablet) {
		@include gu-typeface(headline, 42, $size-only: true);
  }
  @include mq($from: leftCol) {
		@include gu-typeface(headline, 50, $size-only: true);
	}
	@if $size-only == false {
		font-weight: 700;
	}
}
@mixin gu-fontset-heading($size-only: false) {
	@include gu-typeface(headline, 22, $size-only);
  @include mq($from: tablet) {
		@include gu-typeface(headline, 24, $size-only: true);
	}
	@if $size-only == false {
		font-weight: 700;
	}
}

// ----- Body ----- //
@mixin gu-fontset-body-sans($size-only: false) {
	@include gu-typeface(textSans, 16, $size-only);
	@if $size-only == false {
		font-weight: 400;
	}
}
@mixin gu-fontset-body($size-only: false) {
	@include gu-typeface(textEgyptian, 17, $size-only);
	@if $size-only == false {
		font-weight: 400;
	}
}
@mixin gu-fontset-body-large($size-only: false) {
	@include gu-typeface(headline, 20, $size-only);
  @include mq($from: tablet) {
		@include gu-typeface(headline, 22, $size-only: true);
	}
	@if $size-only == false {
		font-weight: 400;
	}
}
@mixin gu-fontset-tabs($size-only: false) {
	@include gu-typeface(headline, 17, $size-only);
	@if $size-only == false {
		font-weight: 700;
	}
}
@mixin gu-fontset-explainer($size-only: false) {
	@include gu-typeface(textSans, 14, $size-only);
	@if $size-only == false {
		font-weight: 700;
	}
}
