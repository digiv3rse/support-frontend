// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Payment API stack matches the snapshot 1`] = `
Object {
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": Object {
    "CreateCodeResources": Object {
      "Fn::Equals": Array [
        "PROD",
        "CODE",
      ],
    },
    "CreateProdResources": Object {
      "Fn::Equals": Array [
        "PROD",
        "PROD",
      ],
    },
  },
  "Description": "payment-api",
  "Mappings": Object {
    "StageVariables": Object {
      "CODE": Object {
        "InstanceType": "t4g.small",
        "MaxInstances": 2,
        "MinInstances": 1,
      },
      "PROD": Object {
        "InstanceType": "t4g.small",
        "MaxInstances": 6,
        "MinInstances": 3,
      },
    },
  },
  "Metadata": Object {
    "AWS::CloudFormation::Interface": Object {
      "ParameterGroups": Array [
        Object {
          "Label": Object {
            "default": "Tags",
          },
          "Parameters": Array [
            "Stack",
            "App",
            "Stage",
          ],
        },
        Object {
          "Label": Object {
            "default": "AMI",
          },
          "Parameters": Array [
            "AMI",
          ],
        },
        Object {
          "Label": Object {
            "default": "Used to fetch RiffRaff artifact",
          },
          "Parameters": Array [
            "ProjectName",
            "ProjectVersion",
          ],
        },
        Object {
          "Label": Object {
            "default": "Networking",
          },
          "Parameters": Array [
            "SiteDomain",
            "VpcId",
            "Subnets",
            "BastionSecurityGroup",
          ],
        },
        Object {
          "Label": Object {
            "default": "AWS Resources",
          },
          "Parameters": Array [
            "EmailSqsQueueCodeArn",
            "EmailSqsQueueProdArn",
            "ContributionsStoreSqsQueueCodeArn",
            "ContributionsStoreSqsQueueProdArn",
            "CertificateArn",
          ],
        },
      ],
    },
  },
  "Parameters": Object {
    "AMI": Object {
      "Description": "AMI ID. Set by RiffRaff on each deploy",
      "Type": "String",
    },
    "App": Object {
      "Default": "payment-api",
      "Description": "Should never change",
      "Type": "String",
    },
    "BastionSecurityGroup": Object {
      "Description": "The SG for the bastion to enable ssh tunnelling",
      "Type": "String",
    },
    "CertificateArn": Object {
      "Description": "The ARN of the HTTPS certificate",
      "Type": "String",
    },
    "CfnVpcId": Object {
      "Description": "VpcId of your Virtual Private Cloud (VPC)",
      "Type": "String",
    },
    "ContributionsStoreSqsQueueCodeArn": Object {
      "Description": "For the PROD stack you still need to supply this, because PROD instances need access to both PROD and CODE contribution store queues.
",
      "Type": "String",
    },
    "ContributionsStoreSqsQueueProdArn": Object {
      "Description": "For the CODE stack you can leave this empty since it won't be used. For the PROD stack you need to set it.
",
      "Type": "String",
    },
    "EmailSqsQueueCodeArn": Object {
      "Description": "For the PROD stack you still need to supply this, because PROD instances need access to both PROD and CODE email queues.
",
      "Type": "String",
    },
    "EmailSqsQueueProdArn": Object {
      "Description": "For the CODE stack you can leave this empty since it won't be used. For the PROD stack you need to set it.
",
      "Type": "String",
    },
    "KinesisStreamArn": Object {
      "Description": "ARN of the kinesis stream to write events to",
      "Type": "String",
    },
    "OphanRole": Object {
      "Description": "ARN of the Ophan cross-account role",
      "Type": "String",
    },
    "PrivateVpcSubnets": Object {
      "Description": "Private subnets to use for EC2 instances",
      "Type": "List<AWS::EC2::Subnet::Id>",
    },
    "ProjectName": Object {
      "Default": "payment-api",
      "Description": "This must match the name key in your build.sbt. It will probably be the same as App, but doesn't have to be.
",
      "Type": "String",
    },
    "ProjectVersion": Object {
      "Default": 0.1,
      "Description": "This must match the version key in your build.sbt",
      "Type": "String",
    },
    "PublicVpcSubnets": Object {
      "Description": "Public subnets to use for the ELB",
      "Type": "List<AWS::EC2::Subnet::Id>",
    },
    "SiteDomain": Object {
      "Description": "Route53 CNAME for load balancer (pointed to by NS1 domain name)",
      "Type": "String",
    },
    "SqsKmsArn": Object {
      "Description": "ARN of the KMS key for encrypting SQS data",
      "Type": "String",
    },
    "Stack": Object {
      "Default": "support",
      "Description": "Should never change",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AmazonPayPaymentError": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD Amazon Pay payment error for one-off contribution via the payment-api",
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "payment-provider",
            "Value": "AmazonPay",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "payment-error",
        "Namespace": "support-payment-api-PROD",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "AppRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sts:AssumeRole",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": Array [
                  "ec2.amazonaws.com",
                ],
              },
            },
          ],
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:aws:iam::\${AWS::AccountId}:policy/guardian-ec2-role-for-ssm",
          },
        ],
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": "PaymentAPILogGroup.Arn",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "CloudwatchLogs",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Sub": "arn:aws:ssm:\${AWS::Region}:\${AWS::AccountId}:parameter/\${App}/*",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SSMConfigParams",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sqs:GetQueueUrl",
                    "sqs:SendMessage",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::If": Array [
                      "CreateProdResources",
                      Array [
                        Object {
                          "Ref": "EmailSqsQueueCodeArn",
                        },
                        Object {
                          "Ref": "EmailSqsQueueProdArn",
                        },
                      ],
                      Array [
                        Object {
                          "Ref": "EmailSqsQueueCodeArn",
                        },
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SqsMessages",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "cloudwatch:PutMetricData",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "CloudWatchMetrics",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Ref": "OphanRole",
                  },
                },
              ],
            },
            "PolicyName": "AssumeOphanRole",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "kinesis:*",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Ref": "KinesisStreamArn",
                  },
                },
              ],
            },
            "PolicyName": "KinesisPut",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "sqs:SendMessage",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::If": Array [
                      "CreateProdResources",
                      Array [
                        Object {
                          "Ref": "ContributionsStoreSqsQueueCodeArn",
                        },
                        Object {
                          "Ref": "ContributionsStoreSqsQueueProdArn",
                        },
                      ],
                      Array [
                        Object {
                          "Ref": "ContributionsStoreSqsQueueCodeArn",
                        },
                      ],
                    ],
                  },
                },
              ],
            },
            "PolicyName": "SQSPut",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "kms:Encrypt",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Ref": "SqsKmsArn",
                  },
                },
              ],
            },
            "PolicyName": "SqsKmsEncryption",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::If": Array [
                        "CreateProdResources",
                        Object {
                          "Fn::Sub": "arn:aws:s3:::support-admin-console/*/*",
                        },
                        Object {
                          "Fn::Sub": "arn:aws:s3:::support-admin-console/CODE/*",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            "PolicyName": "SettingsBucket",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Object {
                "Action": "s3:GetObject",
                "Effect": "Allow",
                "Resource": Array [
                  "arn:aws:s3::*:membership-dist/*",
                ],
              },
            },
            "PolicyName": "s3Deploy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-frontend",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AutoScalingGroup": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 300,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "LaunchConfig",
        },
        "MaxSize": Object {
          "Fn::FindInMap": Array [
            "StageVariables",
            "PROD",
            "MaxInstances",
          ],
        },
        "MinSize": Object {
          "Fn::FindInMap": Array [
            "StageVariables",
            "PROD",
            "MinInstances",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "App",
            },
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/support-frontend",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Fn::Join": Array [
                "-",
                Array [
                  Object {
                    "Ref": "Stack",
                  },
                  "PROD",
                  Object {
                    "Ref": "App",
                  },
                ],
              ],
            },
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "PROD",
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TargetGroup",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "PrivateVpcSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "DescribeEC2Policy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "AppRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ElasticLoadBalancer": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::Sub": "\${Stack}-PROD-\${App}",
        },
        "SecurityGroups": Array [
          Object {
            "Ref": "LoadBalancerSecurityGroup",
          },
        ],
        "Subnets": Object {
          "Ref": "PublicVpcSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": Object {
              "Ref": "App",
            },
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-frontend",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "FrontendELBDNSrecord": Object {
      "Properties": Object {
        "Comment": "CNAME for AWS ELB",
        "HostedZoneId": "/hostedzone/Z1E4V12LQGXFEC",
        "Name": Object {
          "Ref": "SiteDomain",
        },
        "ResourceRecords": Array [
          Object {
            "Fn::GetAtt": "ElasticLoadBalancer.DNSName",
          },
        ],
        "TTL": "120",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "High5XXRateAlarm": Object {
      "Condition": "CreateProdResources",
      "DependsOn": Array [
        "ElasticLoadBalancer",
        "TargetGroup",
      ],
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "High 5XX rate for \${App} in PROD",
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::GetAtt": "ElasticLoadBalancer.LoadBalancerFullName",
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::GetAtt": "TargetGroup.TargetGroupFullName",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "HTTPCode_Target_5XX_Count",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 3,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "InstanceProfile": Object {
      "Properties": Object {
        "Path": "/",
        "Roles": Array [
          Object {
            "Ref": "AppRole",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "InstanceSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Open up SSH access and enable HTTP access on the configured port",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432,
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "FromPort": 22,
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": Object {
              "Ref": "BastionSecurityGroup",
            },
            "ToPort": 22,
          },
          Object {
            "FromPort": 9000,
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": Object {
              "Ref": "LoadBalancerSecurityGroup",
            },
            "ToPort": 9000,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-frontend",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "CfnVpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LaunchConfig": Object {
      "Properties": Object {
        "AssociatePublicIpAddress": false,
        "IamInstanceProfile": Object {
          "Ref": "InstanceProfile",
        },
        "ImageId": Object {
          "Ref": "AMI",
        },
        "InstanceType": Object {
          "Fn::FindInMap": Array [
            "StageVariables",
            "PROD",
            "InstanceType",
          ],
        },
        "SecurityGroups": Array [
          Object {
            "Ref": "InstanceSecurityGroup",
          },
          Object {
            "Ref": "NewWazuhSecurityGroup",
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Sub": "#!/bin/bash -ev
mkdir /etc/gu

cat > /etc/gu/stage <<'EOF'
PROD
EOF

aws --region \${AWS::Region} s3 cp s3://membership-dist/\${Stack}/PROD/\${App}/\${ProjectName}_\${ProjectVersion}_all.deb /tmp
dpkg -i /tmp/\${ProjectName}_\${ProjectVersion}_all.deb
/opt/cloudwatch-logs/configure-logs application \${Stack} PROD \${App} /var/log/\${App}/application.log
",
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "LoadBalancerListener": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateArn",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroup",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "ElasticLoadBalancer",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Permit incoming HTTPS access on port 443, egress to port 9000",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 9000,
            "IpProtocol": "tcp",
            "ToPort": 9000,
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-frontend",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "CfnVpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "NewWazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-frontend",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "VpcId": Object {
          "Ref": "CfnVpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "NoHealthyInstancesAlarm": Object {
      "Condition": "CreateProdResources",
      "DependsOn": Array [
        "ElasticLoadBalancer",
        "TargetGroup",
      ],
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "No healthy instances for \${App} in PROD",
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "LoadBalancer",
            "Value": Object {
              "Fn::GetAtt": "ElasticLoadBalancer.LoadBalancerFullName",
            },
          },
          Object {
            "Name": "TargetGroup",
            "Value": Object {
              "Fn::GetAtt": "TargetGroup.TargetGroupFullName",
            },
          },
        ],
        "EvaluationPeriods": 2,
        "MetricName": "HealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 0.5,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "NoPaypalPaymentsInOneHourAlarm": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD No successful paypal payments via payment-api for an hour",
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "payment-provider",
            "Value": "Paypal",
          },
        ],
        "EvaluationPeriods": 12,
        "MetricName": "payment-success",
        "Namespace": "support-payment-api-PROD",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 0,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "NoPaypalPaymentsInTwoHours247Alarm": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:reader-revenue-24-7",
          },
        ],
        "AlarmDescription": "There have been no one-off contributions using paypal in the last 2 hours",
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD CP One-off contributions with PayPal might be down",
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "payment-provider",
            "Value": "Paypal",
          },
        ],
        "EvaluationPeriods": 12,
        "MetricName": "payment-success",
        "Namespace": "support-payment-api-PROD",
        "Period": 600,
        "Statistic": "Sum",
        "Threshold": 0,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "NoStripePaymentsInOneHourAlarm": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD No successful stripe payments via payment-api for an hour",
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "payment-provider",
            "Value": "Stripe",
          },
        ],
        "EvaluationPeriods": 12,
        "MetricName": "payment-success",
        "Namespace": "support-payment-api-PROD",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 0,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "NoStripePaymentsInThreeHours247Alarm": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:reader-revenue-24-7",
          },
        ],
        "AlarmDescription": "There have been no one-off contributions using card payment in the last 3 hours",
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD CP One-off contributions with Card might be down",
        },
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "Dimensions": Array [
          Object {
            "Name": "payment-provider",
            "Value": "Stripe",
          },
        ],
        "EvaluationPeriods": 12,
        "MetricName": "payment-success",
        "Namespace": "support-payment-api-PROD",
        "Period": 900,
        "Statistic": "Sum",
        "Threshold": 0,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "PaymentAPILogGroup": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Sub": "\${Stack}-\${App}-PROD",
        },
        "RetentionInDays": 14,
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-frontend",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "PaypalPaymentError": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD Paypal payment error for one-off contribution via the payment-api",
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "payment-provider",
            "Value": "Paypal",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "payment-error",
        "Namespace": "support-payment-api-PROD",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "PostPaymentError": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD Failed post-payment task for one-off contributions via the payment-api",
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "post-payment-tasks-error",
        "Namespace": "support-payment-api-PROD",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "StripePaymentError": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD Stripe payment error for one-off contribution via the payment-api",
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "payment-provider",
            "Value": "Stripe",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "payment-error",
        "Namespace": "support-payment-api-PROD",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "StripeRateLimitingAlarm": Object {
      "Condition": "CreateProdResources",
      "Properties": Object {
        "AlarmActions": Array [
          Object {
            "Fn::Sub": "arn:aws:sns:\${AWS::Region}:\${AWS::AccountId}:contributions-dev",
          },
        ],
        "AlarmName": Object {
          "Fn::Sub": "\${App} PROD One or more requests have exceeded the rate limit for Stripe one-off contributions via payment-api in the last 15 mins",
        },
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "payment-provider",
            "Value": "Stripe",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "stripe-rate-limit-exceeded",
        "Namespace": "support-payment-api-PROD",
        "Period": 900,
        "Statistic": "Sum",
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "TargetGroup": Object {
      "DependsOn": Array [
        "ElasticLoadBalancer",
      ],
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckPort": "9000",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "Name": Object {
          "Fn::Sub": "\${Stack}-PROD-\${App}",
        },
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/support-frontend",
          },
          Object {
            "Key": "Stack",
            "Value": "support",
          },
          Object {
            "Key": "Stage",
            "Value": "PROD",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "20",
          },
        ],
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "CfnVpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
  },
}
`;
