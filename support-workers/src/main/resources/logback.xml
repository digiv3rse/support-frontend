<configuration>

<!--    <appender name="STDOUT" class="io.symphonia.lambda.logging.DefaultConsoleAppender">-->
<!--        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">-->
<!--            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">-->
<!--                <marker>SENTRY</marker>-->
<!--            </evaluator>-->
<!--            <onMatch>DENY</onMatch>-->
<!--        </filter>-->

<!--        <encoder>-->
<!--            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] %X{AWSRequestId:-NO-REQUEST-ID} %.-6level %logger{5} - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

    <!-- Configure the Sentry appender, overriding the logging threshold to the ERROR level -->
    <appender name="Sentry" class="io.sentry.logback.SentryAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <!-- Only send events to the Sentry appender if they've been scrubbed -->
        <filter class="com.gu.monitoring.PiiFilter" />
    </appender>

    <root level="info">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="Sentry" />
    </root>

</configuration>
