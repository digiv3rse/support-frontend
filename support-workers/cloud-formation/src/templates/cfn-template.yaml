AWSTemplateFormatVersion: "2010-09-09"
Description: "support-workers state machine"

Parameters:
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
        - PROD
        - CODE
    Default: CODE
  Stack:
    Description: Stack name
    Type: String
    Default: support
  OphanRole:
    Type: String
    Description: ARN of the Ophan cross-account role
  KinesisStreamArn:
    Type: String
    Description: ARN of the kinesis stream to write acquisition events to
Conditions:
  CreateProdResources: !Equals [!Ref "Stage", "PROD"]
  CreateCodeResources: !Equals [!Ref "Stage", "CODE"]
Mappings:
  StageVariables:
    CODE:
      DynamoDBTables:
      - arn:aws:dynamodb:*:*:table/MembershipSub-Promotions-DEV
      - arn:aws:dynamodb:*:*:table/MembershipSub-Promotions-UAT
      RedemptionTables:
      - arn:aws:dynamodb:*:*:table/redemption-codes-DEV
      - arn:aws:dynamodb:*:*:table/redemption-codes-UAT
      SupporterProductDataTable: supporter-product-data-tables-DEV-SupporterProductDataTable
      KinesisStreamArn: arn:aws:kinesis:eu-west-1:865473395570:stream/acquisitions-stream-CODE
    PROD:
      DynamoDBTables:
      - arn:aws:dynamodb:*:*:table/MembershipSub-Promotions-PROD
      - arn:aws:dynamodb:*:*:table/MembershipSub-Promotions-UAT
      RedemptionTables:
      - arn:aws:dynamodb:*:*:table/redemption-codes-UAT
      - arn:aws:dynamodb:*:*:table/redemption-codes-PROD
      SupporterProductDataTable: supporter-product-data-tables-PROD-SupporterProductDataTable
      KinesisStreamArn: arn:aws:kinesis:eu-west-1:865473395570:stream/acquisitions-stream-PROD
Resources:
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: PrivateBucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: s3:GetObject
              Resource: arn:aws:s3:::support-workers-private/*
        - PolicyName: SqsMessages
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - sqs:GetQueueUrl
              - sqs:SendMessage
              Resource: arn:aws:sqs:eu-west-1:865473395570:contributions-thanks
            - Effect: Allow
              Action:
              - sqs:GetQueueUrl
              - sqs:SendMessage
              Resource: arn:aws:sqs:eu-west-1:865473395570:contributions-thanks-dev
        - PolicyName: CloudWatchLogging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Action:
              - logs:Create*
              - logs:PutLogEvents
              - logs:DescribeLogStreams
              - cloudwatch:putMetricData
              Resource: "*"
              Effect: Allow
        - PolicyName: AssumeOphanRole
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Resource:
                Ref: OphanRole
        - PolicyName: Kinesis
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action: kinesis:*
              Resource: !FindInMap [StageVariables, !Ref Stage, KinesisStreamArn]
        - PolicyName: DynamoPromotions
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:DescribeTable
              Resource: !FindInMap [StageVariables, !Ref Stage, DynamoDBTables]
        - PolicyName: DynamoRedemptions
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              Resource: !FindInMap [StageVariables, !Ref Stage, RedemptionTables]
        - PolicyName: SupporterProductDataDynamoTable
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:PutItem
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:BatchGetItem
              - dynamodb:DescribeTable
              Resource:
              - Fn::ImportValue: supporter-product-data-tables-UAT-SupporterProductDataTable
              - Fn::ImportValue: !FindInMap [ StageVariables, !Ref Stage, SupporterProductDataTable ]
  StatesExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: "Allow"
          Principal:
            Service: !Sub states.${AWS::Region}.amazonaws.com
          Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"

  {{#lambdas}}
  {{> lambda}}
  {{/lambdas}}

  SupportWorkersPROD:
    Type: "AWS::StepFunctions::StateMachine"
    Condition: CreateProdResources
    Properties:
      StateMachineName: !Sub support-workers-${Stage}
      DefinitionString:
        !Sub
          - |-
            {{> stateMachine}}

          - {}
      RoleArn: !GetAtt [ StatesExecutionRole, Arn ]

  SupportWorkersCODE:
    Type: "AWS::StepFunctions::StateMachine"
    Condition: CreateCodeResources
    Properties:
      StateMachineName: !Sub support-workers-${Stage}
      DefinitionString:
        !Sub
          - |-
            {{> stateMachine}}

          - {}
      RoleArn: !GetAtt [ StatesExecutionRole, Arn ]

  ExecutionFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
      - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:reader-revenue-dev
      AlarmName: !Sub Support Workers Failure in ${Stage} (Recurring Contributions or Subscriptions Checkout)
      AlarmDescription: There was a failure whilst setting up recurring payments after the user attempted to complete a checkout process. Check https://support-logs.gutools.co.uk/_plugin/kibana/goto/bcce8e6d0d4fbda9f2c58755c79e5332
      MetricName: ExecutionsFailed
      Namespace: AWS/States
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref SupportWorkersPROD
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Period: 60
      EvaluationPeriods: 1
      Statistic: Sum
    DependsOn: SupportWorkersPROD

  TimeoutAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
      - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:reader-revenue-dev
      AlarmName: !Sub Support Workers Timeout in ${Stage} (Recurring Contributions or Subscriptions Checkout)
      AlarmDescription: An execution of the Support Workers state machine has taken an excessively long time to complete
      MetricName: ExecutionsTimedOut
      Namespace: AWS/States
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref SupportWorkersPROD
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Period: 60
      EvaluationPeriods: 1
      Statistic: Sum
    DependsOn: SupportWorkersPROD

  NoPaypalContributionsInTwoHoursAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful recurring paypal contributions for two hours
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: PayPal
        - Name: ProductType
          Value: Contribution
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 2
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  NoStripeContributionsInTwoHoursAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful recurring stripe contributions for two hours
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: Stripe
        - Name: ProductType
          Value: Contribution
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 2
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  # Why 10 hours for gocardless? Well...
  #
  # select
  # event_timestamp,
  # (to_unixtime(event_timestamp) - lag(to_unixtime(event_timestamp)) over (order by event_timestamp))/60/60 as hours_between_go_cardless_acquisitions
  # from acquisitions
  # where received_date>date'2019-04-01'
  # and received_date<date'2019-05-01'
  # and payment_provider='GOCARDLESS'
  # order by hours_between_go_cardless_acquisitions desc;
  #
  NoGocardlessContributionsInTenHoursAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:contributions-dev
      AlarmName: !Sub support-workers ${Stage} No successful recurring Gocardless contributions for ten hours
      MetricName: PaymentSuccess
      Namespace: support-frontend
      Dimensions:
        - Name: PaymentProvider
          Value: DirectDebit
        - Name: ProductType
          Value: Contribution
        - Name: Stage
          Value: !Ref Stage
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      Period: 3600
      EvaluationPeriods: 10
      Statistic: Sum
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD


  # This alarm is for the PaymentSuccess metric where
  # ProductType == DigitalPack AND PaymentProvider in [Stripe, Gocardless, Paypal]
  #
  # The general idea here is
  # a) Have a calculated metric which is a sum of all the payment method metrics for digipack [1]
  # b) Use a fill rather than the metric directly, so we get zeros for every period instead of missing data
  #
  # [1] PaymentProvider is set as a dimension in the PaymentSuccess metric, but the way
  #     cloudwatch handles that is to create a new metric for every value dimension value


  NoDigipackAcquisitionInThreeHoursAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:reader-revenue-dev
      AlarmName: !Sub URGENT 9-5 - ${Stage} support-workers No successful Digital Subscription checkouts in 3h
      Metrics:
        - Id: e1
          Expression: "SUM([FILL(m1,0),FILL(m2,0),FILL(m3,0)])"
          Label: AllDigiPackConversions
        - Id: m1
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: Stripe
                - Name: ProductType
                  Value: DigitalPack
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m2
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: DirectDebit
                - Name: ProductType
                  Value: DigitalPack
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m3
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: PayPal
                - Name: ProductType
                  Value: DigitalPack
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      EvaluationPeriods: 36
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD


  # This alarm is for the PaymentSuccess metric where
  # ProductType == Paper AND PaymentProvider in [Stripe, Gocardless, Paypal]

  NoPaperAcquisitionInOneDayAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:reader-revenue-dev
      AlarmName: !Sub URGENT 9-5 - ${Stage} support-workers No successful paper checkouts in 24h
      Metrics:
        - Id: e1
          Expression: "SUM([FILL(m1,0),FILL(m2,0),FILL(m3,0)])"
          Label: AllPaperConversions
        - Id: m1
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: Stripe
                - Name: ProductType
                  Value: Paper
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m2
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: DirectDebit
                - Name: ProductType
                  Value: Paper
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m3
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: PayPal
                - Name: ProductType
                  Value: Paper
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      EvaluationPeriods: 288
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD

  NoWeeklyAcquisitionInOneDayAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateProdResources
    Properties:
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:reader-revenue-dev
      AlarmName: !Sub URGENT 9-5 - ${Stage} support-workers No successful guardian weekly checkouts in 8h
      Metrics:
        - Id: e1
          Expression: "SUM([FILL(m1,0),FILL(m2,0),FILL(m3,0)])"
          Label: AllWeeklyConversions
        - Id: m1
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: Stripe
                - Name: ProductType
                  Value: GuardianWeekly
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m2
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: DirectDebit
                - Name: ProductType
                  Value: GuardianWeekly
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: m3
          Label: String
          MetricStat:
            Metric:
              Dimensions:
                - Name: PaymentProvider
                  Value: PayPal
                - Name: ProductType
                  Value: GuardianWeekly
                - Name: Stage
                  Value: !Ref Stage
              MetricName: PaymentSuccess
              Namespace: support-frontend
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      EvaluationPeriods: 96
      TreatMissingData: breaching
    DependsOn: SupportWorkersPROD
